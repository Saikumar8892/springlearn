<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.2.xsd">

<!-- Here either we can go with property tag or constructor tag to initialize values-->	
<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
<property name="driverClassName" value="com.mysql.jdbc.Driver" />  
<property name="url" value="jdbc:mysql://localhost:3306/mphasisDB" />  
<property name="username" value="root" />  
<property name="password" value="1234" />  
</bean>  

<!-- This driver manager data source is pushed to JDBCTemplate by default scope is singleton-->
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
<property name="dataSource" ref="ds"></property> <!-- Here datasource is reference type--> 
</bean> 

<!-- Here we will tell container to inject jdbc template to product dao class-->
<bean id="productDaoImpl" class="com.mphasis.dao.ProductDaoImpl">
	<constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
</bean>

<!-- IOC Inversion of control Spring Container is going to create object DataManagerSource Object that will be pushed 
in JDBCTemplate and jdbc template will be pushed inside Product DAO-->
</beans>

